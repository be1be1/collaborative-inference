{"6788": {"url": "https://10.101.15.6/storage/jcce/780ff7b5-34d9-400e-b999-36c927c319fc-GoogLeNet.py", "model_name": "GoogLeNet", "file_name": "GoogLeNet_6788.py", "path": "/home/zjlab/wangds/collaborative-inference/dnn_models/GoogLeNet_6788.py", "re_code": "class GoogLeNet(nn.Module):\n    def __init__(self, num_classes=1000, aux_logits=True, init_weights=False):\n        super(GoogLeNet, self).__init__()\n        self.aux_logits = aux_logits\n\n        self.conv1 = BasicConv2d(1, 64, kernel_size=7, stride=2, padding=3)\n        self.maxpool1 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n\n        self.conv2 = BasicConv2d(64, 64, kernel_size=1)\n        self.conv3 = BasicConv2d(64, 192, kernel_size=3, padding=1)\n        self.maxpool2 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n\n        self.inception3a = Inception(192, 64, 96, 128, 16, 32, 32)\n        self.inception3b = Inception(256, 128, 128, 192, 32, 96, 64)\n        self.maxpool3 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n        # #\n        self.inception4a = Inception(480, 192, 96, 208, 16, 48, 64)\n        self.inception4b = Inception(512, 160, 112, 224, 24, 64, 64)\n        self.inception4c = Inception(512, 128, 128, 256, 24, 64, 64)\n        self.inception4d = Inception(512, 112, 144, 288, 32, 64, 64)\n        self.inception4e = Inception(528, 256, 160, 320, 32, 128, 128)\n        self.maxpool4 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n        #\n        self.inception5a = Inception(832, 256, 160, 320, 32, 128, 128)\n        self.inception5b = Inception(832, 384, 192, 384, 48, 128, 128)\n        #\n        if self.aux_logits:\n            self.aux1 = InceptionAux(512, num_classes)\n            self.aux2 = InceptionAux(528, num_classes)\n\n        self.avgpool = nn.AdaptiveAvgPool2d((1, 1))\n        self.dropout = nn.Dropout(0.4)\n        self.fc = nn.Linear(1024, num_classes)\n        # if init_weights:\n        #     self._initialize_weights()\n\n#    def forward(self, x):\n#        # N x 3 x 224 x 224\n#        x = self.conv1(x)\n#        # N x 64 x 112 x 112\n#        x = self.maxpool1(x)\n#        # N x 64 x 56 x 56\n#        x = self.conv2(x)\n#        # N x 64 x 56 x 56\n#        x = self.conv3(x)\n#        # N x 192 x 56 x 56\n#        x = self.maxpool2(x)\n#\n#        # N x 192 x 28 x 28\n#        x = self.inception3a(x)\n#        # N x 256 x 28 x 28\n#        x = self.inception3b(x)\n#        # # N x 480 x 28 x 28\n#        x = self.maxpool3(x)\n#        # # N x 480 x 14 x 14\n#        x = self.inception4a(x)\n#        # # N x 512 x 14 x 14\n#        # # if self.training and self.aux_logits:    # eval model lose this layer\n#        # #     aux1 = self.aux1(x)\n#        #\n#        x = self.inception4b(x)\n#        # # N x 512 x 14 x 14\n#        x = self.inception4c(x)\n#        # # N x 512 x 14 x 14\n#        x = self.inception4d(x)\n#        # # N x 528 x 14 x 14\n#        # # # if self.training and self.aux_logits:    # eval model lose this layer\n#        # # #     aux2 = self.aux2(x)\n#        # # #\n#        x = self.inception4e(x)\n#        # # N x 832 x 14 x 14\n#        x = self.maxpool4(x)\n#        # # N x 832 x 7 x 7\n#        x = self.inception5a(x)\n#        # # N x 832 x 7 x 7\n#        x = self.inception5b(x)\n#        # N x 1024 x 7 x 7\n#\n#        x = self.avgpool(x)\n#        # # N x 1024 x 1 x 1\n#        x = torch.flatten(x, 1)\n#        # # N x 1024\n#        x = self.dropout(x)\n#        x = self.fc(x)\n#        # N x 1000 (num_classes)\n#        # if self.training and self.aux_logits:   # eval model lose this layer\n#        #     return x\n#        return x\n#\n    def _initialize_weights(self):\n        for m in self.modules():\n            if isinstance(m, nn.Conv2d):\n                nn.init.kaiming_normal_(m.weight, mode='fan_out', nonlinearity='relu')\n                if m.bias is not None:\n                    nn.init.constant_(m.bias, 0)\n            elif isinstance(m, nn.Linear):\n                nn.init.normal_(m.weight, 0, 0.01)\n                nn.init.constant_(m.bias, 0)\n\n    def b0(self, x):\n        conv1_conv = self.conv1.conv(x);  x = None\n        conv1_relu = self.conv1.relu(conv1_conv);  conv1_conv = None\n        maxpool1 = self.maxpool1(conv1_relu);  conv1_relu = None\n        conv2_conv = self.conv2.conv(maxpool1);  maxpool1 = None\n        conv2_relu = self.conv2.relu(conv2_conv);  conv2_conv = None\n        conv3_conv = self.conv3.conv(conv2_relu);  conv2_relu = None\n        conv3_relu = self.conv3.relu(conv3_conv);  conv3_conv = None\n        maxpool2 = self.maxpool2(conv3_relu);  conv3_relu = None\n        return maxpool2\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_0(self, maxpool2):\n        inception3a_branch1_conv = self.inception3a.branch1.conv(maxpool2)\n        inception3a_branch1_relu = self.inception3a.branch1.relu(inception3a_branch1_conv);  inception3a_branch1_conv = None\n        return inception3a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_1(self, maxpool2):\n        inception3a_branch2_0_conv = getattr(self.inception3a.branch2, \"0\").conv(maxpool2)\n        inception3a_branch2_0_relu = getattr(self.inception3a.branch2, \"0\").relu(inception3a_branch2_0_conv);  inception3a_branch2_0_conv = None\n        inception3a_branch2_1_conv = getattr(self.inception3a.branch2, \"1\").conv(inception3a_branch2_0_relu);  inception3a_branch2_0_relu = None\n        inception3a_branch2_1_relu = getattr(self.inception3a.branch2, \"1\").relu(inception3a_branch2_1_conv);  inception3a_branch2_1_conv = None\n        return inception3a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_2(self, maxpool2):\n        inception3a_branch3_0_conv = getattr(self.inception3a.branch3, \"0\").conv(maxpool2)\n        inception3a_branch3_0_relu = getattr(self.inception3a.branch3, \"0\").relu(inception3a_branch3_0_conv);  inception3a_branch3_0_conv = None\n        inception3a_branch3_1_conv = getattr(self.inception3a.branch3, \"1\").conv(inception3a_branch3_0_relu);  inception3a_branch3_0_relu = None\n        inception3a_branch3_1_relu = getattr(self.inception3a.branch3, \"1\").relu(inception3a_branch3_1_conv);  inception3a_branch3_1_conv = None\n        return inception3a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_3(self, maxpool2):\n        inception3a_branch4_0 = getattr(self.inception3a.branch4, \"0\")(maxpool2);  maxpool2 = None\n        inception3a_branch4_1_conv = getattr(self.inception3a.branch4, \"1\").conv(inception3a_branch4_0);  inception3a_branch4_0 = None\n        inception3a_branch4_1_relu = getattr(self.inception3a.branch4, \"1\").relu(inception3a_branch4_1_conv);  inception3a_branch4_1_conv = None\n        return inception3a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b2(self, inception3a_branch1_relu,inception3a_branch2_1_relu,inception3a_branch3_1_relu,inception3a_branch4_1_relu):\n        cat = torch.cat([inception3a_branch1_relu, inception3a_branch2_1_relu, inception3a_branch3_1_relu, inception3a_branch4_1_relu], 1);  inception3a_branch1_relu = inception3a_branch2_1_relu = inception3a_branch3_1_relu = inception3a_branch4_1_relu = None\n        return cat\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_0(self, cat):\n        inception3b_branch1_conv = self.inception3b.branch1.conv(cat)\n        inception3b_branch1_relu = self.inception3b.branch1.relu(inception3b_branch1_conv);  inception3b_branch1_conv = None\n        return inception3b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_1(self, cat):\n        inception3b_branch2_0_conv = getattr(self.inception3b.branch2, \"0\").conv(cat)\n        inception3b_branch2_0_relu = getattr(self.inception3b.branch2, \"0\").relu(inception3b_branch2_0_conv);  inception3b_branch2_0_conv = None\n        inception3b_branch2_1_conv = getattr(self.inception3b.branch2, \"1\").conv(inception3b_branch2_0_relu);  inception3b_branch2_0_relu = None\n        inception3b_branch2_1_relu = getattr(self.inception3b.branch2, \"1\").relu(inception3b_branch2_1_conv);  inception3b_branch2_1_conv = None\n        return inception3b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_2(self, cat):\n        inception3b_branch3_0_conv = getattr(self.inception3b.branch3, \"0\").conv(cat)\n        inception3b_branch3_0_relu = getattr(self.inception3b.branch3, \"0\").relu(inception3b_branch3_0_conv);  inception3b_branch3_0_conv = None\n        inception3b_branch3_1_conv = getattr(self.inception3b.branch3, \"1\").conv(inception3b_branch3_0_relu);  inception3b_branch3_0_relu = None\n        inception3b_branch3_1_relu = getattr(self.inception3b.branch3, \"1\").relu(inception3b_branch3_1_conv);  inception3b_branch3_1_conv = None\n        return inception3b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_3(self, cat):\n        inception3b_branch4_0 = getattr(self.inception3b.branch4, \"0\")(cat);  cat = None\n        inception3b_branch4_1_conv = getattr(self.inception3b.branch4, \"1\").conv(inception3b_branch4_0);  inception3b_branch4_0 = None\n        inception3b_branch4_1_relu = getattr(self.inception3b.branch4, \"1\").relu(inception3b_branch4_1_conv);  inception3b_branch4_1_conv = None\n        return inception3b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b4(self, inception3b_branch1_relu,inception3b_branch2_1_relu,inception3b_branch3_1_relu,inception3b_branch4_1_relu):\n        cat_1 = torch.cat([inception3b_branch1_relu, inception3b_branch2_1_relu, inception3b_branch3_1_relu, inception3b_branch4_1_relu], 1);  inception3b_branch1_relu = inception3b_branch2_1_relu = inception3b_branch3_1_relu = inception3b_branch4_1_relu = None\n        maxpool3 = self.maxpool3(cat_1);  cat_1 = None\n        return maxpool3\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_0(self, maxpool3):\n        inception4a_branch1_conv = self.inception4a.branch1.conv(maxpool3)\n        inception4a_branch1_relu = self.inception4a.branch1.relu(inception4a_branch1_conv);  inception4a_branch1_conv = None\n        return inception4a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_1(self, maxpool3):\n        inception4a_branch2_0_conv = getattr(self.inception4a.branch2, \"0\").conv(maxpool3)\n        inception4a_branch2_0_relu = getattr(self.inception4a.branch2, \"0\").relu(inception4a_branch2_0_conv);  inception4a_branch2_0_conv = None\n        inception4a_branch2_1_conv = getattr(self.inception4a.branch2, \"1\").conv(inception4a_branch2_0_relu);  inception4a_branch2_0_relu = None\n        inception4a_branch2_1_relu = getattr(self.inception4a.branch2, \"1\").relu(inception4a_branch2_1_conv);  inception4a_branch2_1_conv = None\n        return inception4a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_2(self, maxpool3):\n        inception4a_branch3_0_conv = getattr(self.inception4a.branch3, \"0\").conv(maxpool3)\n        inception4a_branch3_0_relu = getattr(self.inception4a.branch3, \"0\").relu(inception4a_branch3_0_conv);  inception4a_branch3_0_conv = None\n        inception4a_branch3_1_conv = getattr(self.inception4a.branch3, \"1\").conv(inception4a_branch3_0_relu);  inception4a_branch3_0_relu = None\n        inception4a_branch3_1_relu = getattr(self.inception4a.branch3, \"1\").relu(inception4a_branch3_1_conv);  inception4a_branch3_1_conv = None\n        return inception4a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_3(self, maxpool3):\n        inception4a_branch4_0 = getattr(self.inception4a.branch4, \"0\")(maxpool3);  maxpool3 = None\n        inception4a_branch4_1_conv = getattr(self.inception4a.branch4, \"1\").conv(inception4a_branch4_0);  inception4a_branch4_0 = None\n        inception4a_branch4_1_relu = getattr(self.inception4a.branch4, \"1\").relu(inception4a_branch4_1_conv);  inception4a_branch4_1_conv = None\n        return inception4a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b6(self, inception4a_branch1_relu,inception4a_branch2_1_relu,inception4a_branch3_1_relu,inception4a_branch4_1_relu):\n        cat_2 = torch.cat([inception4a_branch1_relu, inception4a_branch2_1_relu, inception4a_branch3_1_relu, inception4a_branch4_1_relu], 1);  inception4a_branch1_relu = inception4a_branch2_1_relu = inception4a_branch3_1_relu = inception4a_branch4_1_relu = None\n        return cat_2\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_0(self, cat_2):\n        inception4b_branch1_conv = self.inception4b.branch1.conv(cat_2)\n        inception4b_branch1_relu = self.inception4b.branch1.relu(inception4b_branch1_conv);  inception4b_branch1_conv = None\n        return inception4b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_1(self, cat_2):\n        inception4b_branch2_0_conv = getattr(self.inception4b.branch2, \"0\").conv(cat_2)\n        inception4b_branch2_0_relu = getattr(self.inception4b.branch2, \"0\").relu(inception4b_branch2_0_conv);  inception4b_branch2_0_conv = None\n        inception4b_branch2_1_conv = getattr(self.inception4b.branch2, \"1\").conv(inception4b_branch2_0_relu);  inception4b_branch2_0_relu = None\n        inception4b_branch2_1_relu = getattr(self.inception4b.branch2, \"1\").relu(inception4b_branch2_1_conv);  inception4b_branch2_1_conv = None\n        return inception4b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_2(self, cat_2):\n        inception4b_branch3_0_conv = getattr(self.inception4b.branch3, \"0\").conv(cat_2)\n        inception4b_branch3_0_relu = getattr(self.inception4b.branch3, \"0\").relu(inception4b_branch3_0_conv);  inception4b_branch3_0_conv = None\n        inception4b_branch3_1_conv = getattr(self.inception4b.branch3, \"1\").conv(inception4b_branch3_0_relu);  inception4b_branch3_0_relu = None\n        inception4b_branch3_1_relu = getattr(self.inception4b.branch3, \"1\").relu(inception4b_branch3_1_conv);  inception4b_branch3_1_conv = None\n        return inception4b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_3(self, cat_2):\n        inception4b_branch4_0 = getattr(self.inception4b.branch4, \"0\")(cat_2);  cat_2 = None\n        inception4b_branch4_1_conv = getattr(self.inception4b.branch4, \"1\").conv(inception4b_branch4_0);  inception4b_branch4_0 = None\n        inception4b_branch4_1_relu = getattr(self.inception4b.branch4, \"1\").relu(inception4b_branch4_1_conv);  inception4b_branch4_1_conv = None\n        return inception4b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b8(self, inception4b_branch1_relu,inception4b_branch2_1_relu,inception4b_branch3_1_relu,inception4b_branch4_1_relu):\n        cat_3 = torch.cat([inception4b_branch1_relu, inception4b_branch2_1_relu, inception4b_branch3_1_relu, inception4b_branch4_1_relu], 1);  inception4b_branch1_relu = inception4b_branch2_1_relu = inception4b_branch3_1_relu = inception4b_branch4_1_relu = None\n        return cat_3\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_0(self, cat_3):\n        inception4c_branch1_conv = self.inception4c.branch1.conv(cat_3)\n        inception4c_branch1_relu = self.inception4c.branch1.relu(inception4c_branch1_conv);  inception4c_branch1_conv = None\n        return inception4c_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_1(self, cat_3):\n        inception4c_branch2_0_conv = getattr(self.inception4c.branch2, \"0\").conv(cat_3)\n        inception4c_branch2_0_relu = getattr(self.inception4c.branch2, \"0\").relu(inception4c_branch2_0_conv);  inception4c_branch2_0_conv = None\n        inception4c_branch2_1_conv = getattr(self.inception4c.branch2, \"1\").conv(inception4c_branch2_0_relu);  inception4c_branch2_0_relu = None\n        inception4c_branch2_1_relu = getattr(self.inception4c.branch2, \"1\").relu(inception4c_branch2_1_conv);  inception4c_branch2_1_conv = None\n        return inception4c_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_2(self, cat_3):\n        inception4c_branch3_0_conv = getattr(self.inception4c.branch3, \"0\").conv(cat_3)\n        inception4c_branch3_0_relu = getattr(self.inception4c.branch3, \"0\").relu(inception4c_branch3_0_conv);  inception4c_branch3_0_conv = None\n        inception4c_branch3_1_conv = getattr(self.inception4c.branch3, \"1\").conv(inception4c_branch3_0_relu);  inception4c_branch3_0_relu = None\n        inception4c_branch3_1_relu = getattr(self.inception4c.branch3, \"1\").relu(inception4c_branch3_1_conv);  inception4c_branch3_1_conv = None\n        return inception4c_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_3(self, cat_3):\n        inception4c_branch4_0 = getattr(self.inception4c.branch4, \"0\")(cat_3);  cat_3 = None\n        inception4c_branch4_1_conv = getattr(self.inception4c.branch4, \"1\").conv(inception4c_branch4_0);  inception4c_branch4_0 = None\n        inception4c_branch4_1_relu = getattr(self.inception4c.branch4, \"1\").relu(inception4c_branch4_1_conv);  inception4c_branch4_1_conv = None\n        return inception4c_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b10(self, inception4c_branch1_relu,inception4c_branch2_1_relu,inception4c_branch3_1_relu,inception4c_branch4_1_relu):\n        cat_4 = torch.cat([inception4c_branch1_relu, inception4c_branch2_1_relu, inception4c_branch3_1_relu, inception4c_branch4_1_relu], 1);  inception4c_branch1_relu = inception4c_branch2_1_relu = inception4c_branch3_1_relu = inception4c_branch4_1_relu = None\n        return cat_4\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_0(self, cat_4):\n        inception4d_branch1_conv = self.inception4d.branch1.conv(cat_4)\n        inception4d_branch1_relu = self.inception4d.branch1.relu(inception4d_branch1_conv);  inception4d_branch1_conv = None\n        return inception4d_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_1(self, cat_4):\n        inception4d_branch2_0_conv = getattr(self.inception4d.branch2, \"0\").conv(cat_4)\n        inception4d_branch2_0_relu = getattr(self.inception4d.branch2, \"0\").relu(inception4d_branch2_0_conv);  inception4d_branch2_0_conv = None\n        inception4d_branch2_1_conv = getattr(self.inception4d.branch2, \"1\").conv(inception4d_branch2_0_relu);  inception4d_branch2_0_relu = None\n        inception4d_branch2_1_relu = getattr(self.inception4d.branch2, \"1\").relu(inception4d_branch2_1_conv);  inception4d_branch2_1_conv = None\n        return inception4d_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_2(self, cat_4):\n        inception4d_branch3_0_conv = getattr(self.inception4d.branch3, \"0\").conv(cat_4)\n        inception4d_branch3_0_relu = getattr(self.inception4d.branch3, \"0\").relu(inception4d_branch3_0_conv);  inception4d_branch3_0_conv = None\n        inception4d_branch3_1_conv = getattr(self.inception4d.branch3, \"1\").conv(inception4d_branch3_0_relu);  inception4d_branch3_0_relu = None\n        inception4d_branch3_1_relu = getattr(self.inception4d.branch3, \"1\").relu(inception4d_branch3_1_conv);  inception4d_branch3_1_conv = None\n        return inception4d_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_3(self, cat_4):\n        inception4d_branch4_0 = getattr(self.inception4d.branch4, \"0\")(cat_4);  cat_4 = None\n        inception4d_branch4_1_conv = getattr(self.inception4d.branch4, \"1\").conv(inception4d_branch4_0);  inception4d_branch4_0 = None\n        inception4d_branch4_1_relu = getattr(self.inception4d.branch4, \"1\").relu(inception4d_branch4_1_conv);  inception4d_branch4_1_conv = None\n        return inception4d_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b12(self, inception4d_branch1_relu,inception4d_branch2_1_relu,inception4d_branch3_1_relu,inception4d_branch4_1_relu):\n        cat_5 = torch.cat([inception4d_branch1_relu, inception4d_branch2_1_relu, inception4d_branch3_1_relu, inception4d_branch4_1_relu], 1);  inception4d_branch1_relu = inception4d_branch2_1_relu = inception4d_branch3_1_relu = inception4d_branch4_1_relu = None\n        return cat_5\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_0(self, cat_5):\n        inception4e_branch1_conv = self.inception4e.branch1.conv(cat_5)\n        inception4e_branch1_relu = self.inception4e.branch1.relu(inception4e_branch1_conv);  inception4e_branch1_conv = None\n        return inception4e_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_1(self, cat_5):\n        inception4e_branch2_0_conv = getattr(self.inception4e.branch2, \"0\").conv(cat_5)\n        inception4e_branch2_0_relu = getattr(self.inception4e.branch2, \"0\").relu(inception4e_branch2_0_conv);  inception4e_branch2_0_conv = None\n        inception4e_branch2_1_conv = getattr(self.inception4e.branch2, \"1\").conv(inception4e_branch2_0_relu);  inception4e_branch2_0_relu = None\n        inception4e_branch2_1_relu = getattr(self.inception4e.branch2, \"1\").relu(inception4e_branch2_1_conv);  inception4e_branch2_1_conv = None\n        return inception4e_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_2(self, cat_5):\n        inception4e_branch3_0_conv = getattr(self.inception4e.branch3, \"0\").conv(cat_5)\n        inception4e_branch3_0_relu = getattr(self.inception4e.branch3, \"0\").relu(inception4e_branch3_0_conv);  inception4e_branch3_0_conv = None\n        inception4e_branch3_1_conv = getattr(self.inception4e.branch3, \"1\").conv(inception4e_branch3_0_relu);  inception4e_branch3_0_relu = None\n        inception4e_branch3_1_relu = getattr(self.inception4e.branch3, \"1\").relu(inception4e_branch3_1_conv);  inception4e_branch3_1_conv = None\n        return inception4e_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_3(self, cat_5):\n        inception4e_branch4_0 = getattr(self.inception4e.branch4, \"0\")(cat_5);  cat_5 = None\n        inception4e_branch4_1_conv = getattr(self.inception4e.branch4, \"1\").conv(inception4e_branch4_0);  inception4e_branch4_0 = None\n        inception4e_branch4_1_relu = getattr(self.inception4e.branch4, \"1\").relu(inception4e_branch4_1_conv);  inception4e_branch4_1_conv = None\n        return inception4e_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b14(self, inception4e_branch1_relu,inception4e_branch2_1_relu,inception4e_branch3_1_relu,inception4e_branch4_1_relu):\n        cat_6 = torch.cat([inception4e_branch1_relu, inception4e_branch2_1_relu, inception4e_branch3_1_relu, inception4e_branch4_1_relu], 1);  inception4e_branch1_relu = inception4e_branch2_1_relu = inception4e_branch3_1_relu = inception4e_branch4_1_relu = None\n        maxpool4 = self.maxpool4(cat_6);  cat_6 = None\n        return maxpool4\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_0(self, maxpool4):\n        inception5a_branch1_conv = self.inception5a.branch1.conv(maxpool4)\n        inception5a_branch1_relu = self.inception5a.branch1.relu(inception5a_branch1_conv);  inception5a_branch1_conv = None\n        return inception5a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_1(self, maxpool4):\n        inception5a_branch2_0_conv = getattr(self.inception5a.branch2, \"0\").conv(maxpool4)\n        inception5a_branch2_0_relu = getattr(self.inception5a.branch2, \"0\").relu(inception5a_branch2_0_conv);  inception5a_branch2_0_conv = None\n        inception5a_branch2_1_conv = getattr(self.inception5a.branch2, \"1\").conv(inception5a_branch2_0_relu);  inception5a_branch2_0_relu = None\n        inception5a_branch2_1_relu = getattr(self.inception5a.branch2, \"1\").relu(inception5a_branch2_1_conv);  inception5a_branch2_1_conv = None\n        return inception5a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_2(self, maxpool4):\n        inception5a_branch3_0_conv = getattr(self.inception5a.branch3, \"0\").conv(maxpool4)\n        inception5a_branch3_0_relu = getattr(self.inception5a.branch3, \"0\").relu(inception5a_branch3_0_conv);  inception5a_branch3_0_conv = None\n        inception5a_branch3_1_conv = getattr(self.inception5a.branch3, \"1\").conv(inception5a_branch3_0_relu);  inception5a_branch3_0_relu = None\n        inception5a_branch3_1_relu = getattr(self.inception5a.branch3, \"1\").relu(inception5a_branch3_1_conv);  inception5a_branch3_1_conv = None\n        return inception5a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_3(self, maxpool4):\n        inception5a_branch4_0 = getattr(self.inception5a.branch4, \"0\")(maxpool4);  maxpool4 = None\n        inception5a_branch4_1_conv = getattr(self.inception5a.branch4, \"1\").conv(inception5a_branch4_0);  inception5a_branch4_0 = None\n        inception5a_branch4_1_relu = getattr(self.inception5a.branch4, \"1\").relu(inception5a_branch4_1_conv);  inception5a_branch4_1_conv = None\n        return inception5a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b16(self, inception5a_branch1_relu,inception5a_branch2_1_relu,inception5a_branch3_1_relu,inception5a_branch4_1_relu):\n        cat_7 = torch.cat([inception5a_branch1_relu, inception5a_branch2_1_relu, inception5a_branch3_1_relu, inception5a_branch4_1_relu], 1);  inception5a_branch1_relu = inception5a_branch2_1_relu = inception5a_branch3_1_relu = inception5a_branch4_1_relu = None\n        return cat_7\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_0(self, cat_7):\n        inception5b_branch1_conv = self.inception5b.branch1.conv(cat_7)\n        inception5b_branch1_relu = self.inception5b.branch1.relu(inception5b_branch1_conv);  inception5b_branch1_conv = None\n        return inception5b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_1(self, cat_7):\n        inception5b_branch2_0_conv = getattr(self.inception5b.branch2, \"0\").conv(cat_7)\n        inception5b_branch2_0_relu = getattr(self.inception5b.branch2, \"0\").relu(inception5b_branch2_0_conv);  inception5b_branch2_0_conv = None\n        inception5b_branch2_1_conv = getattr(self.inception5b.branch2, \"1\").conv(inception5b_branch2_0_relu);  inception5b_branch2_0_relu = None\n        inception5b_branch2_1_relu = getattr(self.inception5b.branch2, \"1\").relu(inception5b_branch2_1_conv);  inception5b_branch2_1_conv = None\n        return inception5b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_2(self, cat_7):\n        inception5b_branch3_0_conv = getattr(self.inception5b.branch3, \"0\").conv(cat_7)\n        inception5b_branch3_0_relu = getattr(self.inception5b.branch3, \"0\").relu(inception5b_branch3_0_conv);  inception5b_branch3_0_conv = None\n        inception5b_branch3_1_conv = getattr(self.inception5b.branch3, \"1\").conv(inception5b_branch3_0_relu);  inception5b_branch3_0_relu = None\n        inception5b_branch3_1_relu = getattr(self.inception5b.branch3, \"1\").relu(inception5b_branch3_1_conv);  inception5b_branch3_1_conv = None\n        return inception5b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_3(self, cat_7):\n        inception5b_branch4_0 = getattr(self.inception5b.branch4, \"0\")(cat_7);  cat_7 = None\n        inception5b_branch4_1_conv = getattr(self.inception5b.branch4, \"1\").conv(inception5b_branch4_0);  inception5b_branch4_0 = None\n        inception5b_branch4_1_relu = getattr(self.inception5b.branch4, \"1\").relu(inception5b_branch4_1_conv);  inception5b_branch4_1_conv = None\n        return inception5b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b18(self, inception5b_branch1_relu,inception5b_branch2_1_relu,inception5b_branch3_1_relu,inception5b_branch4_1_relu):\n        cat_8 = torch.cat([inception5b_branch1_relu, inception5b_branch2_1_relu, inception5b_branch3_1_relu, inception5b_branch4_1_relu], 1);  inception5b_branch1_relu = inception5b_branch2_1_relu = inception5b_branch3_1_relu = inception5b_branch4_1_relu = None\n        return cat_8\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def tail(self, cat_8):\n        avgpool = self.avgpool(cat_8);  cat_8 = None\n        flatten = torch.flatten(avgpool, 1);  avgpool = None\n        dropout = self.dropout(flatten);  flatten = None\n        fc = self.fc(dropout);  dropout = None\n        return fc\n\n    def forward(self, x):\n        x = self.b0(x)\n        b1_0 = self.b1_0.remote(self, x)\n        b1_1 = self.b1_1.remote(self, x)\n        b1_2 = self.b1_2.remote(self, x)\n        b1_3 = self.b1_3.remote(self, x)\n        x = self.b2.remote(self, b1_0, b1_1, b1_2, b1_3)\n        b3_0 = self.b3_0.remote(self, x)\n        b3_1 = self.b3_1.remote(self, x)\n        b3_2 = self.b3_2.remote(self, x)\n        b3_3 = self.b3_3.remote(self, x)\n        x = self.b4.remote(self, b3_0, b3_1, b3_2, b3_3)\n        b5_0 = self.b5_0.remote(self, x)\n        b5_1 = self.b5_1.remote(self, x)\n        b5_2 = self.b5_2.remote(self, x)\n        b5_3 = self.b5_3.remote(self, x)\n        x = self.b6.remote(self, b5_0, b5_1, b5_2, b5_3)\n        b7_0 = self.b7_0.remote(self, x)\n        b7_1 = self.b7_1.remote(self, x)\n        b7_2 = self.b7_2.remote(self, x)\n        b7_3 = self.b7_3.remote(self, x)\n        x = self.b8.remote(self, b7_0, b7_1, b7_2, b7_3)\n        b9_0 = self.b9_0.remote(self, x)\n        b9_1 = self.b9_1.remote(self, x)\n        b9_2 = self.b9_2.remote(self, x)\n        b9_3 = self.b9_3.remote(self, x)\n        x = self.b10.remote(self, b9_0, b9_1, b9_2, b9_3)\n        b11_0 = self.b11_0.remote(self, x)\n        b11_1 = self.b11_1.remote(self, x)\n        b11_2 = self.b11_2.remote(self, x)\n        b11_3 = self.b11_3.remote(self, x)\n        x = self.b12.remote(self, b11_0, b11_1, b11_2, b11_3)\n        b13_0 = self.b13_0.remote(self, x)\n        b13_1 = self.b13_1.remote(self, x)\n        b13_2 = self.b13_2.remote(self, x)\n        b13_3 = self.b13_3.remote(self, x)\n        x = self.b14.remote(self, b13_0, b13_1, b13_2, b13_3)\n        b15_0 = self.b15_0.remote(self, x)\n        b15_1 = self.b15_1.remote(self, x)\n        b15_2 = self.b15_2.remote(self, x)\n        b15_3 = self.b15_3.remote(self, x)\n        x = self.b16.remote(self, b15_0, b15_1, b15_2, b15_3)\n        b17_0 = self.b17_0.remote(self, x)\n        b17_1 = self.b17_1.remote(self, x)\n        b17_2 = self.b17_2.remote(self, x)\n        b17_3 = self.b17_3.remote(self, x)\n        x = self.b18.remote(self, b17_0, b17_1, b17_2, b17_3)\n        x = self.tail.remote(self, x)\n        return x\n"}, "6345": {"url": "https://10.101.15.6/storage/jcce/780ff7b5-34d9-400e-b999-36c927c319fc-GoogLeNet.py", "model_name": "GoogLeNet", "file_name": "GoogLeNet_6345.py", "path": "/home/zjlab/wangds/collaborative-inference/dnn_models/GoogLeNet_6345.py", "re_code": "class GoogLeNet(nn.Module):\n    def __init__(self, num_classes=1000, aux_logits=True, init_weights=False):\n        super(GoogLeNet, self).__init__()\n        self.aux_logits = aux_logits\n\n        self.conv1 = BasicConv2d(1, 64, kernel_size=7, stride=2, padding=3)\n        self.maxpool1 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n\n        self.conv2 = BasicConv2d(64, 64, kernel_size=1)\n        self.conv3 = BasicConv2d(64, 192, kernel_size=3, padding=1)\n        self.maxpool2 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n\n        self.inception3a = Inception(192, 64, 96, 128, 16, 32, 32)\n        self.inception3b = Inception(256, 128, 128, 192, 32, 96, 64)\n        self.maxpool3 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n        # #\n        self.inception4a = Inception(480, 192, 96, 208, 16, 48, 64)\n        self.inception4b = Inception(512, 160, 112, 224, 24, 64, 64)\n        self.inception4c = Inception(512, 128, 128, 256, 24, 64, 64)\n        self.inception4d = Inception(512, 112, 144, 288, 32, 64, 64)\n        self.inception4e = Inception(528, 256, 160, 320, 32, 128, 128)\n        self.maxpool4 = nn.MaxPool2d(3, stride=2, ceil_mode=True)\n        #\n        self.inception5a = Inception(832, 256, 160, 320, 32, 128, 128)\n        self.inception5b = Inception(832, 384, 192, 384, 48, 128, 128)\n        #\n        if self.aux_logits:\n            self.aux1 = InceptionAux(512, num_classes)\n            self.aux2 = InceptionAux(528, num_classes)\n\n        self.avgpool = nn.AdaptiveAvgPool2d((1, 1))\n        self.dropout = nn.Dropout(0.4)\n        self.fc = nn.Linear(1024, num_classes)\n        # if init_weights:\n        #     self._initialize_weights()\n\n#    def forward(self, x):\n#        # N x 3 x 224 x 224\n#        x = self.conv1(x)\n#        # N x 64 x 112 x 112\n#        x = self.maxpool1(x)\n#        # N x 64 x 56 x 56\n#        x = self.conv2(x)\n#        # N x 64 x 56 x 56\n#        x = self.conv3(x)\n#        # N x 192 x 56 x 56\n#        x = self.maxpool2(x)\n#\n#        # N x 192 x 28 x 28\n#        x = self.inception3a(x)\n#        # N x 256 x 28 x 28\n#        x = self.inception3b(x)\n#        # # N x 480 x 28 x 28\n#        x = self.maxpool3(x)\n#        # # N x 480 x 14 x 14\n#        x = self.inception4a(x)\n#        # # N x 512 x 14 x 14\n#        # # if self.training and self.aux_logits:    # eval model lose this layer\n#        # #     aux1 = self.aux1(x)\n#        #\n#        x = self.inception4b(x)\n#        # # N x 512 x 14 x 14\n#        x = self.inception4c(x)\n#        # # N x 512 x 14 x 14\n#        x = self.inception4d(x)\n#        # # N x 528 x 14 x 14\n#        # # # if self.training and self.aux_logits:    # eval model lose this layer\n#        # # #     aux2 = self.aux2(x)\n#        # # #\n#        x = self.inception4e(x)\n#        # # N x 832 x 14 x 14\n#        x = self.maxpool4(x)\n#        # # N x 832 x 7 x 7\n#        x = self.inception5a(x)\n#        # # N x 832 x 7 x 7\n#        x = self.inception5b(x)\n#        # N x 1024 x 7 x 7\n#\n#        x = self.avgpool(x)\n#        # # N x 1024 x 1 x 1\n#        x = torch.flatten(x, 1)\n#        # # N x 1024\n#        x = self.dropout(x)\n#        x = self.fc(x)\n#        # N x 1000 (num_classes)\n#        # if self.training and self.aux_logits:   # eval model lose this layer\n#        #     return x\n#        return x\n#\n    def _initialize_weights(self):\n        for m in self.modules():\n            if isinstance(m, nn.Conv2d):\n                nn.init.kaiming_normal_(m.weight, mode='fan_out', nonlinearity='relu')\n                if m.bias is not None:\n                    nn.init.constant_(m.bias, 0)\n            elif isinstance(m, nn.Linear):\n                nn.init.normal_(m.weight, 0, 0.01)\n                nn.init.constant_(m.bias, 0)\n\n    def b0(self, x):\n        conv1_conv = self.conv1.conv(x);  x = None\n        conv1_relu = self.conv1.relu(conv1_conv);  conv1_conv = None\n        maxpool1 = self.maxpool1(conv1_relu);  conv1_relu = None\n        conv2_conv = self.conv2.conv(maxpool1);  maxpool1 = None\n        conv2_relu = self.conv2.relu(conv2_conv);  conv2_conv = None\n        conv3_conv = self.conv3.conv(conv2_relu);  conv2_relu = None\n        conv3_relu = self.conv3.relu(conv3_conv);  conv3_conv = None\n        maxpool2 = self.maxpool2(conv3_relu);  conv3_relu = None\n        return maxpool2\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_0(self, maxpool2):\n        inception3a_branch1_conv = self.inception3a.branch1.conv(maxpool2)\n        inception3a_branch1_relu = self.inception3a.branch1.relu(inception3a_branch1_conv);  inception3a_branch1_conv = None\n        return inception3a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_1(self, maxpool2):\n        inception3a_branch2_0_conv = getattr(self.inception3a.branch2, \"0\").conv(maxpool2)\n        inception3a_branch2_0_relu = getattr(self.inception3a.branch2, \"0\").relu(inception3a_branch2_0_conv);  inception3a_branch2_0_conv = None\n        inception3a_branch2_1_conv = getattr(self.inception3a.branch2, \"1\").conv(inception3a_branch2_0_relu);  inception3a_branch2_0_relu = None\n        inception3a_branch2_1_relu = getattr(self.inception3a.branch2, \"1\").relu(inception3a_branch2_1_conv);  inception3a_branch2_1_conv = None\n        return inception3a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_2(self, maxpool2):\n        inception3a_branch3_0_conv = getattr(self.inception3a.branch3, \"0\").conv(maxpool2)\n        inception3a_branch3_0_relu = getattr(self.inception3a.branch3, \"0\").relu(inception3a_branch3_0_conv);  inception3a_branch3_0_conv = None\n        inception3a_branch3_1_conv = getattr(self.inception3a.branch3, \"1\").conv(inception3a_branch3_0_relu);  inception3a_branch3_0_relu = None\n        inception3a_branch3_1_relu = getattr(self.inception3a.branch3, \"1\").relu(inception3a_branch3_1_conv);  inception3a_branch3_1_conv = None\n        return inception3a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b1_3(self, maxpool2):\n        inception3a_branch4_0 = getattr(self.inception3a.branch4, \"0\")(maxpool2);  maxpool2 = None\n        inception3a_branch4_1_conv = getattr(self.inception3a.branch4, \"1\").conv(inception3a_branch4_0);  inception3a_branch4_0 = None\n        inception3a_branch4_1_relu = getattr(self.inception3a.branch4, \"1\").relu(inception3a_branch4_1_conv);  inception3a_branch4_1_conv = None\n        return inception3a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b2(self, inception3a_branch1_relu,inception3a_branch2_1_relu,inception3a_branch3_1_relu,inception3a_branch4_1_relu):\n        cat = torch.cat([inception3a_branch1_relu, inception3a_branch2_1_relu, inception3a_branch3_1_relu, inception3a_branch4_1_relu], 1);  inception3a_branch1_relu = inception3a_branch2_1_relu = inception3a_branch3_1_relu = inception3a_branch4_1_relu = None\n        return cat\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_0(self, cat):\n        inception3b_branch1_conv = self.inception3b.branch1.conv(cat)\n        inception3b_branch1_relu = self.inception3b.branch1.relu(inception3b_branch1_conv);  inception3b_branch1_conv = None\n        return inception3b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_1(self, cat):\n        inception3b_branch2_0_conv = getattr(self.inception3b.branch2, \"0\").conv(cat)\n        inception3b_branch2_0_relu = getattr(self.inception3b.branch2, \"0\").relu(inception3b_branch2_0_conv);  inception3b_branch2_0_conv = None\n        inception3b_branch2_1_conv = getattr(self.inception3b.branch2, \"1\").conv(inception3b_branch2_0_relu);  inception3b_branch2_0_relu = None\n        inception3b_branch2_1_relu = getattr(self.inception3b.branch2, \"1\").relu(inception3b_branch2_1_conv);  inception3b_branch2_1_conv = None\n        return inception3b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_2(self, cat):\n        inception3b_branch3_0_conv = getattr(self.inception3b.branch3, \"0\").conv(cat)\n        inception3b_branch3_0_relu = getattr(self.inception3b.branch3, \"0\").relu(inception3b_branch3_0_conv);  inception3b_branch3_0_conv = None\n        inception3b_branch3_1_conv = getattr(self.inception3b.branch3, \"1\").conv(inception3b_branch3_0_relu);  inception3b_branch3_0_relu = None\n        inception3b_branch3_1_relu = getattr(self.inception3b.branch3, \"1\").relu(inception3b_branch3_1_conv);  inception3b_branch3_1_conv = None\n        return inception3b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b3_3(self, cat):\n        inception3b_branch4_0 = getattr(self.inception3b.branch4, \"0\")(cat);  cat = None\n        inception3b_branch4_1_conv = getattr(self.inception3b.branch4, \"1\").conv(inception3b_branch4_0);  inception3b_branch4_0 = None\n        inception3b_branch4_1_relu = getattr(self.inception3b.branch4, \"1\").relu(inception3b_branch4_1_conv);  inception3b_branch4_1_conv = None\n        return inception3b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b4(self, inception3b_branch1_relu,inception3b_branch2_1_relu,inception3b_branch3_1_relu,inception3b_branch4_1_relu):\n        cat_1 = torch.cat([inception3b_branch1_relu, inception3b_branch2_1_relu, inception3b_branch3_1_relu, inception3b_branch4_1_relu], 1);  inception3b_branch1_relu = inception3b_branch2_1_relu = inception3b_branch3_1_relu = inception3b_branch4_1_relu = None\n        maxpool3 = self.maxpool3(cat_1);  cat_1 = None\n        return maxpool3\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_0(self, maxpool3):\n        inception4a_branch1_conv = self.inception4a.branch1.conv(maxpool3)\n        inception4a_branch1_relu = self.inception4a.branch1.relu(inception4a_branch1_conv);  inception4a_branch1_conv = None\n        return inception4a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_1(self, maxpool3):\n        inception4a_branch2_0_conv = getattr(self.inception4a.branch2, \"0\").conv(maxpool3)\n        inception4a_branch2_0_relu = getattr(self.inception4a.branch2, \"0\").relu(inception4a_branch2_0_conv);  inception4a_branch2_0_conv = None\n        inception4a_branch2_1_conv = getattr(self.inception4a.branch2, \"1\").conv(inception4a_branch2_0_relu);  inception4a_branch2_0_relu = None\n        inception4a_branch2_1_relu = getattr(self.inception4a.branch2, \"1\").relu(inception4a_branch2_1_conv);  inception4a_branch2_1_conv = None\n        return inception4a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_2(self, maxpool3):\n        inception4a_branch3_0_conv = getattr(self.inception4a.branch3, \"0\").conv(maxpool3)\n        inception4a_branch3_0_relu = getattr(self.inception4a.branch3, \"0\").relu(inception4a_branch3_0_conv);  inception4a_branch3_0_conv = None\n        inception4a_branch3_1_conv = getattr(self.inception4a.branch3, \"1\").conv(inception4a_branch3_0_relu);  inception4a_branch3_0_relu = None\n        inception4a_branch3_1_relu = getattr(self.inception4a.branch3, \"1\").relu(inception4a_branch3_1_conv);  inception4a_branch3_1_conv = None\n        return inception4a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b5_3(self, maxpool3):\n        inception4a_branch4_0 = getattr(self.inception4a.branch4, \"0\")(maxpool3);  maxpool3 = None\n        inception4a_branch4_1_conv = getattr(self.inception4a.branch4, \"1\").conv(inception4a_branch4_0);  inception4a_branch4_0 = None\n        inception4a_branch4_1_relu = getattr(self.inception4a.branch4, \"1\").relu(inception4a_branch4_1_conv);  inception4a_branch4_1_conv = None\n        return inception4a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b6(self, inception4a_branch1_relu,inception4a_branch2_1_relu,inception4a_branch3_1_relu,inception4a_branch4_1_relu):\n        cat_2 = torch.cat([inception4a_branch1_relu, inception4a_branch2_1_relu, inception4a_branch3_1_relu, inception4a_branch4_1_relu], 1);  inception4a_branch1_relu = inception4a_branch2_1_relu = inception4a_branch3_1_relu = inception4a_branch4_1_relu = None\n        return cat_2\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_0(self, cat_2):\n        inception4b_branch1_conv = self.inception4b.branch1.conv(cat_2)\n        inception4b_branch1_relu = self.inception4b.branch1.relu(inception4b_branch1_conv);  inception4b_branch1_conv = None\n        return inception4b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_1(self, cat_2):\n        inception4b_branch2_0_conv = getattr(self.inception4b.branch2, \"0\").conv(cat_2)\n        inception4b_branch2_0_relu = getattr(self.inception4b.branch2, \"0\").relu(inception4b_branch2_0_conv);  inception4b_branch2_0_conv = None\n        inception4b_branch2_1_conv = getattr(self.inception4b.branch2, \"1\").conv(inception4b_branch2_0_relu);  inception4b_branch2_0_relu = None\n        inception4b_branch2_1_relu = getattr(self.inception4b.branch2, \"1\").relu(inception4b_branch2_1_conv);  inception4b_branch2_1_conv = None\n        return inception4b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_2(self, cat_2):\n        inception4b_branch3_0_conv = getattr(self.inception4b.branch3, \"0\").conv(cat_2)\n        inception4b_branch3_0_relu = getattr(self.inception4b.branch3, \"0\").relu(inception4b_branch3_0_conv);  inception4b_branch3_0_conv = None\n        inception4b_branch3_1_conv = getattr(self.inception4b.branch3, \"1\").conv(inception4b_branch3_0_relu);  inception4b_branch3_0_relu = None\n        inception4b_branch3_1_relu = getattr(self.inception4b.branch3, \"1\").relu(inception4b_branch3_1_conv);  inception4b_branch3_1_conv = None\n        return inception4b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b7_3(self, cat_2):\n        inception4b_branch4_0 = getattr(self.inception4b.branch4, \"0\")(cat_2);  cat_2 = None\n        inception4b_branch4_1_conv = getattr(self.inception4b.branch4, \"1\").conv(inception4b_branch4_0);  inception4b_branch4_0 = None\n        inception4b_branch4_1_relu = getattr(self.inception4b.branch4, \"1\").relu(inception4b_branch4_1_conv);  inception4b_branch4_1_conv = None\n        return inception4b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b8(self, inception4b_branch1_relu,inception4b_branch2_1_relu,inception4b_branch3_1_relu,inception4b_branch4_1_relu):\n        cat_3 = torch.cat([inception4b_branch1_relu, inception4b_branch2_1_relu, inception4b_branch3_1_relu, inception4b_branch4_1_relu], 1);  inception4b_branch1_relu = inception4b_branch2_1_relu = inception4b_branch3_1_relu = inception4b_branch4_1_relu = None\n        return cat_3\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_0(self, cat_3):\n        inception4c_branch1_conv = self.inception4c.branch1.conv(cat_3)\n        inception4c_branch1_relu = self.inception4c.branch1.relu(inception4c_branch1_conv);  inception4c_branch1_conv = None\n        return inception4c_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_1(self, cat_3):\n        inception4c_branch2_0_conv = getattr(self.inception4c.branch2, \"0\").conv(cat_3)\n        inception4c_branch2_0_relu = getattr(self.inception4c.branch2, \"0\").relu(inception4c_branch2_0_conv);  inception4c_branch2_0_conv = None\n        inception4c_branch2_1_conv = getattr(self.inception4c.branch2, \"1\").conv(inception4c_branch2_0_relu);  inception4c_branch2_0_relu = None\n        inception4c_branch2_1_relu = getattr(self.inception4c.branch2, \"1\").relu(inception4c_branch2_1_conv);  inception4c_branch2_1_conv = None\n        return inception4c_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_2(self, cat_3):\n        inception4c_branch3_0_conv = getattr(self.inception4c.branch3, \"0\").conv(cat_3)\n        inception4c_branch3_0_relu = getattr(self.inception4c.branch3, \"0\").relu(inception4c_branch3_0_conv);  inception4c_branch3_0_conv = None\n        inception4c_branch3_1_conv = getattr(self.inception4c.branch3, \"1\").conv(inception4c_branch3_0_relu);  inception4c_branch3_0_relu = None\n        inception4c_branch3_1_relu = getattr(self.inception4c.branch3, \"1\").relu(inception4c_branch3_1_conv);  inception4c_branch3_1_conv = None\n        return inception4c_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b9_3(self, cat_3):\n        inception4c_branch4_0 = getattr(self.inception4c.branch4, \"0\")(cat_3);  cat_3 = None\n        inception4c_branch4_1_conv = getattr(self.inception4c.branch4, \"1\").conv(inception4c_branch4_0);  inception4c_branch4_0 = None\n        inception4c_branch4_1_relu = getattr(self.inception4c.branch4, \"1\").relu(inception4c_branch4_1_conv);  inception4c_branch4_1_conv = None\n        return inception4c_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b10(self, inception4c_branch1_relu,inception4c_branch2_1_relu,inception4c_branch3_1_relu,inception4c_branch4_1_relu):\n        cat_4 = torch.cat([inception4c_branch1_relu, inception4c_branch2_1_relu, inception4c_branch3_1_relu, inception4c_branch4_1_relu], 1);  inception4c_branch1_relu = inception4c_branch2_1_relu = inception4c_branch3_1_relu = inception4c_branch4_1_relu = None\n        return cat_4\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_0(self, cat_4):\n        inception4d_branch1_conv = self.inception4d.branch1.conv(cat_4)\n        inception4d_branch1_relu = self.inception4d.branch1.relu(inception4d_branch1_conv);  inception4d_branch1_conv = None\n        return inception4d_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_1(self, cat_4):\n        inception4d_branch2_0_conv = getattr(self.inception4d.branch2, \"0\").conv(cat_4)\n        inception4d_branch2_0_relu = getattr(self.inception4d.branch2, \"0\").relu(inception4d_branch2_0_conv);  inception4d_branch2_0_conv = None\n        inception4d_branch2_1_conv = getattr(self.inception4d.branch2, \"1\").conv(inception4d_branch2_0_relu);  inception4d_branch2_0_relu = None\n        inception4d_branch2_1_relu = getattr(self.inception4d.branch2, \"1\").relu(inception4d_branch2_1_conv);  inception4d_branch2_1_conv = None\n        return inception4d_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_2(self, cat_4):\n        inception4d_branch3_0_conv = getattr(self.inception4d.branch3, \"0\").conv(cat_4)\n        inception4d_branch3_0_relu = getattr(self.inception4d.branch3, \"0\").relu(inception4d_branch3_0_conv);  inception4d_branch3_0_conv = None\n        inception4d_branch3_1_conv = getattr(self.inception4d.branch3, \"1\").conv(inception4d_branch3_0_relu);  inception4d_branch3_0_relu = None\n        inception4d_branch3_1_relu = getattr(self.inception4d.branch3, \"1\").relu(inception4d_branch3_1_conv);  inception4d_branch3_1_conv = None\n        return inception4d_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b11_3(self, cat_4):\n        inception4d_branch4_0 = getattr(self.inception4d.branch4, \"0\")(cat_4);  cat_4 = None\n        inception4d_branch4_1_conv = getattr(self.inception4d.branch4, \"1\").conv(inception4d_branch4_0);  inception4d_branch4_0 = None\n        inception4d_branch4_1_relu = getattr(self.inception4d.branch4, \"1\").relu(inception4d_branch4_1_conv);  inception4d_branch4_1_conv = None\n        return inception4d_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b12(self, inception4d_branch1_relu,inception4d_branch2_1_relu,inception4d_branch3_1_relu,inception4d_branch4_1_relu):\n        cat_5 = torch.cat([inception4d_branch1_relu, inception4d_branch2_1_relu, inception4d_branch3_1_relu, inception4d_branch4_1_relu], 1);  inception4d_branch1_relu = inception4d_branch2_1_relu = inception4d_branch3_1_relu = inception4d_branch4_1_relu = None\n        return cat_5\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_0(self, cat_5):\n        inception4e_branch1_conv = self.inception4e.branch1.conv(cat_5)\n        inception4e_branch1_relu = self.inception4e.branch1.relu(inception4e_branch1_conv);  inception4e_branch1_conv = None\n        return inception4e_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_1(self, cat_5):\n        inception4e_branch2_0_conv = getattr(self.inception4e.branch2, \"0\").conv(cat_5)\n        inception4e_branch2_0_relu = getattr(self.inception4e.branch2, \"0\").relu(inception4e_branch2_0_conv);  inception4e_branch2_0_conv = None\n        inception4e_branch2_1_conv = getattr(self.inception4e.branch2, \"1\").conv(inception4e_branch2_0_relu);  inception4e_branch2_0_relu = None\n        inception4e_branch2_1_relu = getattr(self.inception4e.branch2, \"1\").relu(inception4e_branch2_1_conv);  inception4e_branch2_1_conv = None\n        return inception4e_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_2(self, cat_5):\n        inception4e_branch3_0_conv = getattr(self.inception4e.branch3, \"0\").conv(cat_5)\n        inception4e_branch3_0_relu = getattr(self.inception4e.branch3, \"0\").relu(inception4e_branch3_0_conv);  inception4e_branch3_0_conv = None\n        inception4e_branch3_1_conv = getattr(self.inception4e.branch3, \"1\").conv(inception4e_branch3_0_relu);  inception4e_branch3_0_relu = None\n        inception4e_branch3_1_relu = getattr(self.inception4e.branch3, \"1\").relu(inception4e_branch3_1_conv);  inception4e_branch3_1_conv = None\n        return inception4e_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b13_3(self, cat_5):\n        inception4e_branch4_0 = getattr(self.inception4e.branch4, \"0\")(cat_5);  cat_5 = None\n        inception4e_branch4_1_conv = getattr(self.inception4e.branch4, \"1\").conv(inception4e_branch4_0);  inception4e_branch4_0 = None\n        inception4e_branch4_1_relu = getattr(self.inception4e.branch4, \"1\").relu(inception4e_branch4_1_conv);  inception4e_branch4_1_conv = None\n        return inception4e_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b14(self, inception4e_branch1_relu,inception4e_branch2_1_relu,inception4e_branch3_1_relu,inception4e_branch4_1_relu):\n        cat_6 = torch.cat([inception4e_branch1_relu, inception4e_branch2_1_relu, inception4e_branch3_1_relu, inception4e_branch4_1_relu], 1);  inception4e_branch1_relu = inception4e_branch2_1_relu = inception4e_branch3_1_relu = inception4e_branch4_1_relu = None\n        maxpool4 = self.maxpool4(cat_6);  cat_6 = None\n        return maxpool4\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_0(self, maxpool4):\n        inception5a_branch1_conv = self.inception5a.branch1.conv(maxpool4)\n        inception5a_branch1_relu = self.inception5a.branch1.relu(inception5a_branch1_conv);  inception5a_branch1_conv = None\n        return inception5a_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_1(self, maxpool4):\n        inception5a_branch2_0_conv = getattr(self.inception5a.branch2, \"0\").conv(maxpool4)\n        inception5a_branch2_0_relu = getattr(self.inception5a.branch2, \"0\").relu(inception5a_branch2_0_conv);  inception5a_branch2_0_conv = None\n        inception5a_branch2_1_conv = getattr(self.inception5a.branch2, \"1\").conv(inception5a_branch2_0_relu);  inception5a_branch2_0_relu = None\n        inception5a_branch2_1_relu = getattr(self.inception5a.branch2, \"1\").relu(inception5a_branch2_1_conv);  inception5a_branch2_1_conv = None\n        return inception5a_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_2(self, maxpool4):\n        inception5a_branch3_0_conv = getattr(self.inception5a.branch3, \"0\").conv(maxpool4)\n        inception5a_branch3_0_relu = getattr(self.inception5a.branch3, \"0\").relu(inception5a_branch3_0_conv);  inception5a_branch3_0_conv = None\n        inception5a_branch3_1_conv = getattr(self.inception5a.branch3, \"1\").conv(inception5a_branch3_0_relu);  inception5a_branch3_0_relu = None\n        inception5a_branch3_1_relu = getattr(self.inception5a.branch3, \"1\").relu(inception5a_branch3_1_conv);  inception5a_branch3_1_conv = None\n        return inception5a_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b15_3(self, maxpool4):\n        inception5a_branch4_0 = getattr(self.inception5a.branch4, \"0\")(maxpool4);  maxpool4 = None\n        inception5a_branch4_1_conv = getattr(self.inception5a.branch4, \"1\").conv(inception5a_branch4_0);  inception5a_branch4_0 = None\n        inception5a_branch4_1_relu = getattr(self.inception5a.branch4, \"1\").relu(inception5a_branch4_1_conv);  inception5a_branch4_1_conv = None\n        return inception5a_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b16(self, inception5a_branch1_relu,inception5a_branch2_1_relu,inception5a_branch3_1_relu,inception5a_branch4_1_relu):\n        cat_7 = torch.cat([inception5a_branch1_relu, inception5a_branch2_1_relu, inception5a_branch3_1_relu, inception5a_branch4_1_relu], 1);  inception5a_branch1_relu = inception5a_branch2_1_relu = inception5a_branch3_1_relu = inception5a_branch4_1_relu = None\n        return cat_7\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_0(self, cat_7):\n        inception5b_branch1_conv = self.inception5b.branch1.conv(cat_7)\n        inception5b_branch1_relu = self.inception5b.branch1.relu(inception5b_branch1_conv);  inception5b_branch1_conv = None\n        return inception5b_branch1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_1(self, cat_7):\n        inception5b_branch2_0_conv = getattr(self.inception5b.branch2, \"0\").conv(cat_7)\n        inception5b_branch2_0_relu = getattr(self.inception5b.branch2, \"0\").relu(inception5b_branch2_0_conv);  inception5b_branch2_0_conv = None\n        inception5b_branch2_1_conv = getattr(self.inception5b.branch2, \"1\").conv(inception5b_branch2_0_relu);  inception5b_branch2_0_relu = None\n        inception5b_branch2_1_relu = getattr(self.inception5b.branch2, \"1\").relu(inception5b_branch2_1_conv);  inception5b_branch2_1_conv = None\n        return inception5b_branch2_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_2(self, cat_7):\n        inception5b_branch3_0_conv = getattr(self.inception5b.branch3, \"0\").conv(cat_7)\n        inception5b_branch3_0_relu = getattr(self.inception5b.branch3, \"0\").relu(inception5b_branch3_0_conv);  inception5b_branch3_0_conv = None\n        inception5b_branch3_1_conv = getattr(self.inception5b.branch3, \"1\").conv(inception5b_branch3_0_relu);  inception5b_branch3_0_relu = None\n        inception5b_branch3_1_relu = getattr(self.inception5b.branch3, \"1\").relu(inception5b_branch3_1_conv);  inception5b_branch3_1_conv = None\n        return inception5b_branch3_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b17_3(self, cat_7):\n        inception5b_branch4_0 = getattr(self.inception5b.branch4, \"0\")(cat_7);  cat_7 = None\n        inception5b_branch4_1_conv = getattr(self.inception5b.branch4, \"1\").conv(inception5b_branch4_0);  inception5b_branch4_0 = None\n        inception5b_branch4_1_relu = getattr(self.inception5b.branch4, \"1\").relu(inception5b_branch4_1_conv);  inception5b_branch4_1_conv = None\n        return inception5b_branch4_1_relu\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def b18(self, inception5b_branch1_relu,inception5b_branch2_1_relu,inception5b_branch3_1_relu,inception5b_branch4_1_relu):\n        cat_8 = torch.cat([inception5b_branch1_relu, inception5b_branch2_1_relu, inception5b_branch3_1_relu, inception5b_branch4_1_relu], 1);  inception5b_branch1_relu = inception5b_branch2_1_relu = inception5b_branch3_1_relu = inception5b_branch4_1_relu = None\n        return cat_8\n\n    @ulian.collaborate(scheduling_strategy=\"SPREAD\")\n    def tail(self, cat_8):\n        avgpool = self.avgpool(cat_8);  cat_8 = None\n        flatten = torch.flatten(avgpool, 1);  avgpool = None\n        dropout = self.dropout(flatten);  flatten = None\n        fc = self.fc(dropout);  dropout = None\n        return fc\n\n    def forward(self, x):\n        x = self.b0(x)\n        b1_0 = self.b1_0.remote(self, x)\n        b1_1 = self.b1_1.remote(self, x)\n        b1_2 = self.b1_2.remote(self, x)\n        b1_3 = self.b1_3.remote(self, x)\n        x = self.b2.remote(self, b1_0, b1_1, b1_2, b1_3)\n        b3_0 = self.b3_0.remote(self, x)\n        b3_1 = self.b3_1.remote(self, x)\n        b3_2 = self.b3_2.remote(self, x)\n        b3_3 = self.b3_3.remote(self, x)\n        x = self.b4.remote(self, b3_0, b3_1, b3_2, b3_3)\n        b5_0 = self.b5_0.remote(self, x)\n        b5_1 = self.b5_1.remote(self, x)\n        b5_2 = self.b5_2.remote(self, x)\n        b5_3 = self.b5_3.remote(self, x)\n        x = self.b6.remote(self, b5_0, b5_1, b5_2, b5_3)\n        b7_0 = self.b7_0.remote(self, x)\n        b7_1 = self.b7_1.remote(self, x)\n        b7_2 = self.b7_2.remote(self, x)\n        b7_3 = self.b7_3.remote(self, x)\n        x = self.b8.remote(self, b7_0, b7_1, b7_2, b7_3)\n        b9_0 = self.b9_0.remote(self, x)\n        b9_1 = self.b9_1.remote(self, x)\n        b9_2 = self.b9_2.remote(self, x)\n        b9_3 = self.b9_3.remote(self, x)\n        x = self.b10.remote(self, b9_0, b9_1, b9_2, b9_3)\n        b11_0 = self.b11_0.remote(self, x)\n        b11_1 = self.b11_1.remote(self, x)\n        b11_2 = self.b11_2.remote(self, x)\n        b11_3 = self.b11_3.remote(self, x)\n        x = self.b12.remote(self, b11_0, b11_1, b11_2, b11_3)\n        b13_0 = self.b13_0.remote(self, x)\n        b13_1 = self.b13_1.remote(self, x)\n        b13_2 = self.b13_2.remote(self, x)\n        b13_3 = self.b13_3.remote(self, x)\n        x = self.b14.remote(self, b13_0, b13_1, b13_2, b13_3)\n        b15_0 = self.b15_0.remote(self, x)\n        b15_1 = self.b15_1.remote(self, x)\n        b15_2 = self.b15_2.remote(self, x)\n        b15_3 = self.b15_3.remote(self, x)\n        x = self.b16.remote(self, b15_0, b15_1, b15_2, b15_3)\n        b17_0 = self.b17_0.remote(self, x)\n        b17_1 = self.b17_1.remote(self, x)\n        b17_2 = self.b17_2.remote(self, x)\n        b17_3 = self.b17_3.remote(self, x)\n        x = self.b18.remote(self, b17_0, b17_1, b17_2, b17_3)\n        x = self.tail.remote(self, x)\n        return x\n"}}